{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Interval-scheduling","google":"","tagline":"Inspectors algorithm problem","body":"The manager of a large student union on campus comes to you with the\r\nfollowing problem. She’s in charge of a group of n students, each of whom\r\nis scheduled to work one shift during the week. There are different jobs\r\nassociated with these shifts (tending the main desk, helping with package\r\ndelivery, rebooting cranky information kiosks, etc.), but.we can view each\r\nshift as a single contiguous interval of time. There can be multiple shifts\r\ngoing on at once.\r\nShe’s trying to choose a subset of these n students to form a super-\r\nvising committee that she can meet with once a week. She considers such\r\na committee to be complete if, for every student not on the committee,\r\nthat student’s shift overlaps (at least partially) the shift of some student\r\nwho is on the committee. In this way, each student’s performance can be\r\nobserved by at least one person who’s serving on the committee.\r\nGive an efficient algorithm that takes the schedule of n shifts and\r\nproduces a complete supervising committee containing as few students\r\nas possible.\r\n\r\n**Example**. \r\nSuppose n = 3, and the shifts are\r\n\r\n> Monday 4 p.M.-Monday 8 P.M.,\r\n\r\n> Monday 6 p.M.-Monday 10 P.M.,\r\n\r\n> Monday 9 P.M.-Monday 1I P.M..\r\n\r\nThen the smallest complete supervising committee would consist of just\r\nthe second student, since the second shift overlaps both the first and the\r\nthird.\r\n### Algorithm Design by _Jon Kleinberg_ and _Éva Tardos_"}